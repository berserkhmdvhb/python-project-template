[project]
name = "myproject"
dynamic = ["version"]
description = "A modern Python project template with optional CLI support."
authors = [{ name = "Your Name", email = "your@email.com" }]
keywords = ["cli", "template", "python", "packaging"]
readme = "README.md"
license = { file = "LICENSE.txt" }
requires-python = ">=3.10"

dependencies = [
  "argcomplete",
  "colorama>=0.4.0",
  "python-dotenv>=1.0.0"
]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]

[project.optional-dependencies]
dev = [
  "argcomplete",
  "build",
  "colorama",
  "coverage==7.5.0",
  "coveralls>=3.3.2 ; python_version < '3.13'",
  "mypy",
  "pre-commit",
  "pytest",
  "pytest-cov",
  "pytest-watch",
  "python-dotenv",
  "ruff",
  "safety",
  "twine",
  "types-colorama"
]

[project.scripts]
myproject = "myproject.__main__:main"

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["myproject*"]

[tool.setuptools.dynamic]
version = { attr = "myproject.__version__" }

# ----------------------------
# Mypy Configuration
# ----------------------------
[tool.mypy]
files = ["src", "tests"]
exclude = "\\.ipynb$"
strict = true
ignore_missing_imports = true
show_error_codes = true
pretty = true

# ----------------------------
# Ruff Configuration
# ----------------------------
[tool.ruff]
line-length = 100
target-version = "py39"
fix = true
show-fixes = true
exclude = ["tests/manual/*"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D",       # pydocstyle: disable docstring requirements
  "TD",      # allow TODO comments
  "FIX002",  # allow FIXME comments
  "TC003",   # allow runtime use of typing-only imports like `Path`
  "COM812"   # avoid conflict with Ruff formatter
]
per-file-ignores = {"tests/*" = ["S101", "S603"], "src/myproject/cli/utils_color.py" = ["T201"]}

# ----------------------------
# Pytest Configuration
# ----------------------------
[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--maxfail=1 -v"
norecursedirs = ["tests/cli/old"]
filterwarnings = [
  "ignore::pytest.PytestUnhandledThreadExceptionWarning"
]
